{"pageProps":{"posts":[{"title":"TypeScript-函数(function)","description":"函数是JavaScript应用程序的基础。 它帮助你实现抽象层，模拟类，信息隐藏和模块","date":"2021-12-29","slug":"2021-12-29-函数(function)","image":"/assets/images/posts/random-img.jpg"},{"title":"TypeScript-类(class)","description":"传统的JavaScript程序使用函数和基于原型的继承来创建可重用的组件，但对于熟悉使用面向对象方式的程序员来讲就有些棘手，因为他们用的是基于类的继承并且对象是由类构建出来的","date":"2021-12-28","slug":"2021-12-28-类(class)","image":"/assets/images/posts/random-img.jpg"},{"title":"TypeScript-接口(interface)","description":"TypeScript的核心原则之一是对值所具有的结构进行类型检查。 它有时被称做“鸭式辨型法”或“结构性子类型化”","date":"2021-12-27","slug":"2021-12-27-接口(interface)","image":"/assets/images/posts/random-img.jpg"},{"title":"TypeScript-变量声明","description":"let和const是JavaScript里相对较新的变量声明方式。 像我们之前提到过的，let在很多方面与var是相似的，但是可以帮助大家避免在JavaScript里常见一些问题","date":"2021-12-26","slug":"2021-12-26-变量声明","image":"/assets/images/posts/random-img.jpg"},{"title":"TypeScript-基础类型","description":"为了让程序有价值，我们需要能够处理最简单的数据单元：数字，字符串，结构体，布尔值等。 TypeScript支持与JavaScript几乎相同的数据类型，此外还提供了实用的枚举类型方便我们使用","date":"2021-12-25","slug":"2021-12-25-基础类型","image":"/assets/images/posts/random-img.jpg"}],"pagination":{"next":"/page2"}},"__N_SSG":true}